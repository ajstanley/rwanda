<?php

/**
 * @file
 * Contains rwanda.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_help().
 */
function rwanda_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the rwanda module.
    case 'help.page.rwanda':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Custom behaviors for Aegius') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function rwanda_theme() {
  $themes['rwanda_court'] = ['render element' => 'form'];
  $themes['rwanda_login'] = ['render element' => 'form'];
  return $themes;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function rwanda_form_registration_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#title'] = t('Register');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function rwanda_form_node_registrant_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $current_path = \Drupal::service('path.current')->getPath();
  $parts = explode('/', $current_path);

  $path = Url::fromRoute('rwanda.registration_form_edit',
    ['node' => $parts[2]])->toString();
  $response = new RedirectResponse($path);
  $response->send();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function rwanda_form_node_court_case_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $path = Url::fromRoute('rwanda.court_case')->toString();
  $response = new RedirectResponse($path);
  $response->send();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function rwanda_form_node_court_case_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $current_path = \Drupal::service('path.current')->getPath();
  $parts = explode('/', $current_path);
  $path = Url::fromRoute('rwanda.court_case.edit',
    ['node' => $parts[2]])->toString();
  $response = new RedirectResponse($path);
  $response->send();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function rwanda_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#theme'] = 'rwanda_login';
}

/**
 * Implements hook_form_alter().
 */
function rwanda_form_alter(array &$form, FormStateInterface $form_state, $form_id) {

  if ($form_id === 'node_court_case_form') {
    // unimplemented
  }
}

/**
 * Implements hook_field_widget_entity_reference_paragraphs_form_alter().
 */
function rwanda_field_widget_entity_reference_paragraphs_form_alter(&$element, &$form_state, $context) {
  if (isset($element['#paragraph_type']) && $element['#paragraph_type'] != 'accomplices') {
    return;
  }
  $configs = [
    [
      'field_name' => 'field_outcome',
      'conditions' => ["value" => 'guilty'],
      'controlling_field' => 'field_court_decision',
    ],
    [
      'field_name' => 'field_accomplice_sentence',
      'conditions' => ["value" => 'imprisonment'],
      'controlling_field' => 'field_outcome',
    ],
    [
      'field_name' => 'field_accomplice_sentence',
      'conditions' => ["value" => 'guilty'],
      'controlling_field' => 'field_court_decision',
    ],
  ];
  foreach ($configs as $config) {
    paragraph_field_state($element, $config['field_name'], $config['controlling_field'], 'enabled', $config['conditions']);
  }
}

/**
 * Utility Function to add states to Paragraphs.
 *
 * @param $element
 *   The element being receiving State restrictions.
 * @param $field_name
 *   The field who's parameters are changed
 * @param $controlling_field_name
 *   The fiels whose state affects the field.
 * @param $state_key
 *   The selected state
 * @param array $conditions
 *   The conditionsn to be met.
 */
function paragraph_field_state(&$element, $field_name, $controlling_field_name, $state_key, array $conditions) {
  if (!isset($element['subform'][$field_name])) {
    return;
  }
  $subform = &$element['subform'];
  $parents = $subform['#parents'];
  $parents[] = $controlling_field_name;
  $field_id = array_shift($parents);
  $field_id .= '[' . implode('][', $parents) . ']';
  $subform[$field_name]['#states'][$state_key][':input[name="' . $field_id . '"]'] = $conditions;

}

